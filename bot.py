from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import logging
import os

API_TOKEN = os.getenv('API_TOKEN')  # –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(KeyboardButton("üîß –£—Å–ª—É–≥–∏"), KeyboardButton("üìç –ê–¥—Ä–µ—Å"))
main_kb.add(KeyboardButton("üóì –ó–∞–ø–∏—Å—å"), KeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å"))

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Cartweaker. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=main_kb)

@dp.message_handler(lambda msg: "—É—Å–ª—É–≥–∏" in msg.text.lower())
async def show_services(message: types.Message):
    text = (
        "üìã –£—Å–ª—É–≥–∏ Cartweaker:\n"
        "- üö´ EGR OFF ‚Äî –æ—Ç ¬£100\n"
        "- ‚ôªÔ∏è DPF OFF ‚Äî –æ—Ç ¬£120\n"
        "- üí® Stage1 ‚Äî –æ—Ç ¬£150\n"
        "- üîí IMMO OFF ‚Äî –æ—Ç ¬£80\n"
        "\n–î–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ VIN –∏–ª–∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ."
    )
    await message.answer(text)

@dp.message_handler(lambda msg: "–∞–¥—Ä–µ—Å" in msg.text.lower())
async def show_address(message: types.Message):
    await message.answer("üìç –ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ö–µ–º–±—Ä–∏–¥–∂–µ. –†–∞–±–æ—Ç–∞–µ–º –ü–Ω‚Äì–°–± —Å 09:00 –¥–æ 18:00. –¢–µ–ª–µ—Ñ–æ–Ω: +44 0000 000000")

@dp.message_handler(lambda msg: "–∑–∞–ø–∏—Å—å" in msg.text.lower())
async def handle_booking(message: types.Message):
    await message.answer("üóì –î–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: –∏–º—è, –∞–≤—Ç–æ, VIN –∏ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è.")

@dp.message_handler(lambda msg: "–≤–æ–ø—Ä–æ—Å" in msg.text.lower())
async def handle_questions(message: types.Message):
    await message.answer("‚ùì –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –∏–ª–∏ —Å–≤—è–∂—É —Å –º–∞—Å—Ç–µ—Ä–æ–º.")

@dp.message_handler()
async def fallback(message: types.Message):
    if len(message.text) == 7 and message.text[0].isalpha():
        await message.answer("üîç –ü—Ä–∏–Ω—è–ª –Ω–æ–º–µ—Ä –∞–≤—Ç–æ. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ. –°–∫–æ—Ä–æ –ø–æ–¥–∫–ª—é—á–∏–º DVLA API.")
    else:
        await message.answer("ü§ñ –Ø –Ω–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: '—É—Å–ª—É–≥–∏', '–∞–¥—Ä–µ—Å', '–∑–∞–ø–∏—Å—å', '–≤–æ–ø—Ä–æ—Å'.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)